[General]
# 01号 流量触发上限75us，下限45us，步长10us，
# GCL周期400us，初始GCL：CT-40us，BE-360us，初始GCL满足调度
# 没有保护带，没有抢占
# 所有流量从0s开始发送
network = GCLadaptive

record-eventlog = false 
debug-on-errors = true
result-dir = results
sim-time-limit = 20ms

# debug
**.displayAddresses = true
**.verbose = true

# MAC Addresses
**.robotController.eth.address = "00-00-00-00-00-01"
**.workstation1.eth.address = "00-00-00-00-00-02"
**.workstation2.eth.address = "00-00-00-00-00-03"
**.roboticArm.eth.address = "00-00-00-00-00-04"

# Switches
**.switch*.processingDelay.delay = 5us
**.filteringDatabase.database = xmldoc("xml/Routing.xml", "/filteringDatabases/")

**.switchA.eth[3].queue.gateController.initialSchedule = xmldoc("xml/GCL.xml", "/schedules/switch[@name='switchA']/port[@id='3']/schedule")
#**.switch*.eth[*].queue.gateController.enableHoldAndRelease = false
**.switch*.eth[*].queue.numberOfQueues = 8
**.switch*.eth[*].queue.tsAlgorithms[0].typename = "StrictPriority"
**.switch*.eth[*].queue.tsAlgorithms[1].typename = "StrictPriority"
**.switch*.eth[*].queue.tsAlgorithms[2].typename = "StrictPriority"
**.switch*.eth[*].queue.tsAlgorithms[3].typename = "StrictPriority"
**.switch*.eth[*].queue.tsAlgorithms[4].typename = "StrictPriority"
**.switch*.eth[*].queue.tsAlgorithms[5].typename = "StrictPriority"
**.switch*.eth[*].queue.tsAlgorithms[6].typename = "StrictPriority"
**.switch*.eth[*].queue.tsAlgorithms[7].typename = "StrictPriority"
#**.switch*.eth[*].queue.queues[0].expressQueue = true
#**.switch*.eth[*].queue.queues[1].expressQueue = true
#**.switch*.eth[*].queue.queues[2].expressQueue = true
#**.switch*.eth[*].queue.queues[3].expressQueue = true
#**.switch*.eth[*].queue.queues[4].expressQueue = true
#**.switch*.eth[*].queue.queues[5].expressQueue = true
#**.switch*.eth[*].queue.queues[6].expressQueue = true
#**.switch*.eth[*].queue.queues[7].expressQueue = true
**.gateController.result_file_location = "results/gateController.txt"

**.queues[*].bufferCapacity = 363360b

**.switchA.eth[3].mac.enablePreemptingFrames = false

# Schedule/Routing Swap
#**.scheduleSwap.schedule = xmldoc("xml/TestScenarioScheduleSwap.xml")

# Robot Controller
**.robotController.trafGenSchedApp.initialSchedule = xmldoc("xml/GCL.xml")

# Workstations
**.workstation*.trafGenApp.destAddress = "00-00-00-00-00-04"
# BE流会占满全部带宽
**.workstation*.trafGenApp.packetLength = 1500Byte-4Byte # MTU-Size - VLAN-Tag-Size
**.workstation*.trafGenApp.sendInterval = 12us
**.workstation*.trafGenApp.vlanTagEnabled = true
**.workstation1.trafGenApp.pcp = 6
**.workstation2.trafGenApp.pcp = 5

# Robotic Arms
**.roboticArm.trafGenAppGCL.numPacketsPerBurst = 0
**.roboticArm.trafGenAppGCL.sendInterval = 1ms
**.roboticArm.trafGenAppGCL.packetLength = 100B
**.roboticArm.trafGenAppGCL.result_file_location = "results/roboticArm.txt"
